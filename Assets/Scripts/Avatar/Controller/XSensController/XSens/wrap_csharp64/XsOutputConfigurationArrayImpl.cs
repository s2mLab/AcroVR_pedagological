//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.5
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace XDA {

public class XsOutputConfigurationArrayImpl : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal XsOutputConfigurationArrayImpl(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(XsOutputConfigurationArrayImpl obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~XsOutputConfigurationArrayImpl() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          xsensdeviceapiPINVOKE.delete_XsOutputConfigurationArrayImpl(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
    }
  }

  public XsOutputConfigurationArrayImpl(uint count, XsOutputConfiguration src) : this(xsensdeviceapiPINVOKE.new_XsOutputConfigurationArrayImpl__SWIG_0(count, XsOutputConfiguration.getCPtr(src)), true) {
  }

  public XsOutputConfigurationArrayImpl(uint count) : this(xsensdeviceapiPINVOKE.new_XsOutputConfigurationArrayImpl__SWIG_1(count), true) {
  }

  public XsOutputConfigurationArrayImpl() : this(xsensdeviceapiPINVOKE.new_XsOutputConfigurationArrayImpl__SWIG_2(), true) {
  }

  public XsOutputConfigurationArrayImpl(XsOutputConfigurationArrayImpl other) : this(xsensdeviceapiPINVOKE.new_XsOutputConfigurationArrayImpl__SWIG_3(XsOutputConfigurationArrayImpl.getCPtr(other)), true) {
    if (xsensdeviceapiPINVOKE.SWIGPendingException.Pending) throw xsensdeviceapiPINVOKE.SWIGPendingException.Retrieve();
  }

  public XsOutputConfigurationArrayImpl(XsOutputConfiguration arg0, uint sz, XsDataFlags flags) : this(xsensdeviceapiPINVOKE.new_XsOutputConfigurationArrayImpl__SWIG_4(XsOutputConfiguration.getCPtr(arg0), sz, (int)flags), true) {
  }

  public XsOutputConfigurationArrayImpl(XsOutputConfiguration arg0, uint sz) : this(xsensdeviceapiPINVOKE.new_XsOutputConfigurationArrayImpl__SWIG_5(XsOutputConfiguration.getCPtr(arg0), sz), true) {
  }

  public void clear() {
    xsensdeviceapiPINVOKE.XsOutputConfigurationArrayImpl_clear(swigCPtr);
  }

  public void reserve(uint count) {
    xsensdeviceapiPINVOKE.XsOutputConfigurationArrayImpl_reserve(swigCPtr, count);
  }

  public uint reserved() {
    uint ret = xsensdeviceapiPINVOKE.XsOutputConfigurationArrayImpl_reserved(swigCPtr);
    return ret;
  }

  public SWIGTYPE_p_XsArrayDescriptor descriptor() {
    SWIGTYPE_p_XsArrayDescriptor ret = new SWIGTYPE_p_XsArrayDescriptor(xsensdeviceapiPINVOKE.XsOutputConfigurationArrayImpl_descriptor(swigCPtr), false);
    return ret;
  }

  public XsOutputConfiguration value(uint index) {
    XsOutputConfiguration ret = new XsOutputConfiguration(xsensdeviceapiPINVOKE.XsOutputConfigurationArrayImpl_value(swigCPtr, index), true);
    return ret;
  }

  public XsOutputConfiguration first() {
    XsOutputConfiguration ret = new XsOutputConfiguration(xsensdeviceapiPINVOKE.XsOutputConfigurationArrayImpl_first(swigCPtr), true);
    return ret;
  }

  public XsOutputConfiguration last() {
    XsOutputConfiguration ret = new XsOutputConfiguration(xsensdeviceapiPINVOKE.XsOutputConfigurationArrayImpl_last(swigCPtr), true);
    return ret;
  }

  public XsOutputConfiguration at(uint index) {
    XsOutputConfiguration ret = new XsOutputConfiguration(xsensdeviceapiPINVOKE.XsOutputConfigurationArrayImpl_at__SWIG_0(swigCPtr, index), false);
    return ret;
  }

  public void insert(XsOutputConfiguration item, uint index) {
    xsensdeviceapiPINVOKE.XsOutputConfigurationArrayImpl_insert__SWIG_0(swigCPtr, XsOutputConfiguration.getCPtr(item), index);
    if (xsensdeviceapiPINVOKE.SWIGPendingException.Pending) throw xsensdeviceapiPINVOKE.SWIGPendingException.Retrieve();
  }

  public void insert(XsOutputConfiguration items, uint index, uint count) {
    xsensdeviceapiPINVOKE.XsOutputConfigurationArrayImpl_insert__SWIG_1(swigCPtr, XsOutputConfiguration.getCPtr(items), index, count);
  }

  public void push_back(XsOutputConfiguration item) {
    xsensdeviceapiPINVOKE.XsOutputConfigurationArrayImpl_push_back(swigCPtr, XsOutputConfiguration.getCPtr(item));
    if (xsensdeviceapiPINVOKE.SWIGPendingException.Pending) throw xsensdeviceapiPINVOKE.SWIGPendingException.Retrieve();
  }

  public void pop_back(uint count) {
    xsensdeviceapiPINVOKE.XsOutputConfigurationArrayImpl_pop_back__SWIG_0(swigCPtr, count);
  }

  public void pop_back() {
    xsensdeviceapiPINVOKE.XsOutputConfigurationArrayImpl_pop_back__SWIG_1(swigCPtr);
  }

  public void push_front(XsOutputConfiguration item) {
    xsensdeviceapiPINVOKE.XsOutputConfigurationArrayImpl_push_front(swigCPtr, XsOutputConfiguration.getCPtr(item));
    if (xsensdeviceapiPINVOKE.SWIGPendingException.Pending) throw xsensdeviceapiPINVOKE.SWIGPendingException.Retrieve();
  }

  public void pop_front(uint count) {
    xsensdeviceapiPINVOKE.XsOutputConfigurationArrayImpl_pop_front__SWIG_0(swigCPtr, count);
  }

  public void pop_front() {
    xsensdeviceapiPINVOKE.XsOutputConfigurationArrayImpl_pop_front__SWIG_1(swigCPtr);
  }

  public uint size() {
    uint ret = xsensdeviceapiPINVOKE.XsOutputConfigurationArrayImpl_size(swigCPtr);
    return ret;
  }

  public void erase(uint index, uint count) {
    xsensdeviceapiPINVOKE.XsOutputConfigurationArrayImpl_erase__SWIG_0(swigCPtr, index, count);
  }

  public void erase(uint index) {
    xsensdeviceapiPINVOKE.XsOutputConfigurationArrayImpl_erase__SWIG_1(swigCPtr, index);
  }

  public void assign(uint count, XsOutputConfiguration src) {
    xsensdeviceapiPINVOKE.XsOutputConfigurationArrayImpl_assign(swigCPtr, count, XsOutputConfiguration.getCPtr(src));
  }

  public void resize(uint count) {
    xsensdeviceapiPINVOKE.XsOutputConfigurationArrayImpl_resize(swigCPtr, count);
  }

  public void setSize(uint count) {
    xsensdeviceapiPINVOKE.XsOutputConfigurationArrayImpl_setSize(swigCPtr, count);
  }

  public void append(XsOutputConfigurationArrayImpl other) {
    xsensdeviceapiPINVOKE.XsOutputConfigurationArrayImpl_append(swigCPtr, XsOutputConfigurationArrayImpl.getCPtr(other));
    if (xsensdeviceapiPINVOKE.SWIGPendingException.Pending) throw xsensdeviceapiPINVOKE.SWIGPendingException.Retrieve();
  }

  public bool empty() {
    bool ret = xsensdeviceapiPINVOKE.XsOutputConfigurationArrayImpl_empty(swigCPtr);
    return ret;
  }

  public void swap(XsOutputConfigurationArrayImpl other) {
    xsensdeviceapiPINVOKE.XsOutputConfigurationArrayImpl_swap(swigCPtr, XsOutputConfigurationArrayImpl.getCPtr(other));
    if (xsensdeviceapiPINVOKE.SWIGPendingException.Pending) throw xsensdeviceapiPINVOKE.SWIGPendingException.Retrieve();
  }

  public int find(XsOutputConfiguration needle) {
    int ret = xsensdeviceapiPINVOKE.XsOutputConfigurationArrayImpl_find(swigCPtr, XsOutputConfiguration.getCPtr(needle));
    if (xsensdeviceapiPINVOKE.SWIGPendingException.Pending) throw xsensdeviceapiPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public void removeDuplicates() {
    xsensdeviceapiPINVOKE.XsOutputConfigurationArrayImpl_removeDuplicates(swigCPtr);
  }

  public void sort() {
    xsensdeviceapiPINVOKE.XsOutputConfigurationArrayImpl_sort(swigCPtr);
  }

}

}
