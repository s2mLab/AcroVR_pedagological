//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.5
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace XDA {

public class XsDeviceId : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal XsDeviceId(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(XsDeviceId obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~XsDeviceId() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          xsensdeviceapiPINVOKE.delete_XsDeviceId(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
    }
  }

  public XsDeviceId(uint deviceId) : this(xsensdeviceapiPINVOKE.new_XsDeviceId__SWIG_0(deviceId), true) {
  }

  public XsDeviceId() : this(xsensdeviceapiPINVOKE.new_XsDeviceId__SWIG_1(), true) {
  }

  public XsDeviceId(XsDeviceId other) : this(xsensdeviceapiPINVOKE.new_XsDeviceId__SWIG_2(XsDeviceId.getCPtr(other)), true) {
    if (xsensdeviceapiPINVOKE.SWIGPendingException.Pending) throw xsensdeviceapiPINVOKE.SWIGPendingException.Retrieve();
  }

  public uint toInt() {
    uint ret = xsensdeviceapiPINVOKE.XsDeviceId_toInt(swigCPtr);
    return ret;
  }

  public XsString toXsString() {
    XsString ret = new XsString(xsensdeviceapiPINVOKE.XsDeviceId_toXsString(swigCPtr), true);
    return ret;
  }

  public void fromString(XsString s) {
    xsensdeviceapiPINVOKE.XsDeviceId_fromString(swigCPtr, XsString.getCPtr(s));
    if (xsensdeviceapiPINVOKE.SWIGPendingException.Pending) throw xsensdeviceapiPINVOKE.SWIGPendingException.Retrieve();
  }

  public bool isValid() {
    bool ret = xsensdeviceapiPINVOKE.XsDeviceId_isValid(swigCPtr);
    return ret;
  }

  public bool isXbusMaster() {
    bool ret = xsensdeviceapiPINVOKE.XsDeviceId_isXbusMaster(swigCPtr);
    return ret;
  }

  public bool isAwinda1() {
    bool ret = xsensdeviceapiPINVOKE.XsDeviceId_isAwinda1(swigCPtr);
    return ret;
  }

  public bool isAwinda2() {
    bool ret = xsensdeviceapiPINVOKE.XsDeviceId_isAwinda2(swigCPtr);
    return ret;
  }

  public bool isAwinda() {
    bool ret = xsensdeviceapiPINVOKE.XsDeviceId_isAwinda(swigCPtr);
    return ret;
  }

  public bool isXbusMasterMotionTracker() {
    bool ret = xsensdeviceapiPINVOKE.XsDeviceId_isXbusMasterMotionTracker(swigCPtr);
    return ret;
  }

  public bool isMtw1() {
    bool ret = xsensdeviceapiPINVOKE.XsDeviceId_isMtw1(swigCPtr);
    return ret;
  }

  public bool isMtw2() {
    bool ret = xsensdeviceapiPINVOKE.XsDeviceId_isMtw2(swigCPtr);
    return ret;
  }

  public bool isMtw() {
    bool ret = xsensdeviceapiPINVOKE.XsDeviceId_isMtw(swigCPtr);
    return ret;
  }

  public bool isMt9c() {
    bool ret = xsensdeviceapiPINVOKE.XsDeviceId_isMt9c(swigCPtr);
    return ret;
  }

  public bool isLegacyMtig() {
    bool ret = xsensdeviceapiPINVOKE.XsDeviceId_isLegacyMtig(swigCPtr);
    return ret;
  }

  public bool isMtig() {
    bool ret = xsensdeviceapiPINVOKE.XsDeviceId_isMtig(swigCPtr);
    return ret;
  }

  public bool isMtMk4() {
    bool ret = xsensdeviceapiPINVOKE.XsDeviceId_isMtMk4(swigCPtr);
    return ret;
  }

  public bool isMtMk4_X() {
    bool ret = xsensdeviceapiPINVOKE.XsDeviceId_isMtMk4_X(swigCPtr);
    return ret;
  }

  public bool isMtMk4_1() {
    bool ret = xsensdeviceapiPINVOKE.XsDeviceId_isMtMk4_1(swigCPtr);
    return ret;
  }

  public bool isMtMk4_2() {
    bool ret = xsensdeviceapiPINVOKE.XsDeviceId_isMtMk4_2(swigCPtr);
    return ret;
  }

  public bool isMtMk4_3() {
    bool ret = xsensdeviceapiPINVOKE.XsDeviceId_isMtMk4_3(swigCPtr);
    return ret;
  }

  public bool isMtMk4_X0() {
    bool ret = xsensdeviceapiPINVOKE.XsDeviceId_isMtMk4_X0(swigCPtr);
    return ret;
  }

  public bool isMtMk4_10() {
    bool ret = xsensdeviceapiPINVOKE.XsDeviceId_isMtMk4_10(swigCPtr);
    return ret;
  }

  public bool isMtMk4_20() {
    bool ret = xsensdeviceapiPINVOKE.XsDeviceId_isMtMk4_20(swigCPtr);
    return ret;
  }

  public bool isMtMk4_30() {
    bool ret = xsensdeviceapiPINVOKE.XsDeviceId_isMtMk4_30(swigCPtr);
    return ret;
  }

  public bool isMtMk4_X00() {
    bool ret = xsensdeviceapiPINVOKE.XsDeviceId_isMtMk4_X00(swigCPtr);
    return ret;
  }

  public bool isMtMk4_100() {
    bool ret = xsensdeviceapiPINVOKE.XsDeviceId_isMtMk4_100(swigCPtr);
    return ret;
  }

  public bool isMtMk4_200() {
    bool ret = xsensdeviceapiPINVOKE.XsDeviceId_isMtMk4_200(swigCPtr);
    return ret;
  }

  public bool isMtMk4_300() {
    bool ret = xsensdeviceapiPINVOKE.XsDeviceId_isMtMk4_300(swigCPtr);
    return ret;
  }

  public bool isMtMk4_400() {
    bool ret = xsensdeviceapiPINVOKE.XsDeviceId_isMtMk4_400(swigCPtr);
    return ret;
  }

  public bool isMtMk4_500() {
    bool ret = xsensdeviceapiPINVOKE.XsDeviceId_isMtMk4_500(swigCPtr);
    return ret;
  }

  public bool isMtMk4_600() {
    bool ret = xsensdeviceapiPINVOKE.XsDeviceId_isMtMk4_600(swigCPtr);
    return ret;
  }

  public bool isMtMk4_700() {
    bool ret = xsensdeviceapiPINVOKE.XsDeviceId_isMtMk4_700(swigCPtr);
    return ret;
  }

  public bool isMtMk4_710() {
    bool ret = xsensdeviceapiPINVOKE.XsDeviceId_isMtMk4_710(swigCPtr);
    return ret;
  }

  public bool isMtMk4_800() {
    bool ret = xsensdeviceapiPINVOKE.XsDeviceId_isMtMk4_800(swigCPtr);
    return ret;
  }

  public bool isMtMk4_900() {
    bool ret = xsensdeviceapiPINVOKE.XsDeviceId_isMtMk4_900(swigCPtr);
    return ret;
  }

  public bool isMtx2() {
    bool ret = xsensdeviceapiPINVOKE.XsDeviceId_isMtx2(swigCPtr);
    return ret;
  }

  public bool isMtx() {
    bool ret = xsensdeviceapiPINVOKE.XsDeviceId_isMtx(swigCPtr);
    return ret;
  }

  public bool isWirelessMaster() {
    bool ret = xsensdeviceapiPINVOKE.XsDeviceId_isWirelessMaster(swigCPtr);
    return ret;
  }

  public bool isAwinda1Station() {
    bool ret = xsensdeviceapiPINVOKE.XsDeviceId_isAwinda1Station(swigCPtr);
    return ret;
  }

  public bool isAwinda1Dongle() {
    bool ret = xsensdeviceapiPINVOKE.XsDeviceId_isAwinda1Dongle(swigCPtr);
    return ret;
  }

  public bool isAwinda1Oem() {
    bool ret = xsensdeviceapiPINVOKE.XsDeviceId_isAwinda1Oem(swigCPtr);
    return ret;
  }

  public bool isAwinda2Station() {
    bool ret = xsensdeviceapiPINVOKE.XsDeviceId_isAwinda2Station(swigCPtr);
    return ret;
  }

  public bool isAwinda2Dongle() {
    bool ret = xsensdeviceapiPINVOKE.XsDeviceId_isAwinda2Dongle(swigCPtr);
    return ret;
  }

  public bool isAwinda2Oem() {
    bool ret = xsensdeviceapiPINVOKE.XsDeviceId_isAwinda2Oem(swigCPtr);
    return ret;
  }

  public bool isAwindaStation() {
    bool ret = xsensdeviceapiPINVOKE.XsDeviceId_isAwindaStation(swigCPtr);
    return ret;
  }

  public bool isAwindaDongle() {
    bool ret = xsensdeviceapiPINVOKE.XsDeviceId_isAwindaDongle(swigCPtr);
    return ret;
  }

  public bool isAwindaOem() {
    bool ret = xsensdeviceapiPINVOKE.XsDeviceId_isAwindaOem(swigCPtr);
    return ret;
  }

  public bool isSyncStation() {
    bool ret = xsensdeviceapiPINVOKE.XsDeviceId_isSyncStation(swigCPtr);
    return ret;
  }

  public bool isBodyPack() {
    bool ret = xsensdeviceapiPINVOKE.XsDeviceId_isBodyPack(swigCPtr);
    return ret;
  }

  public bool isFis1100EvalKit() {
    bool ret = xsensdeviceapiPINVOKE.XsDeviceId_isFis1100EvalKit(swigCPtr);
    return ret;
  }

  public bool isFis2100EvalKit() {
    bool ret = xsensdeviceapiPINVOKE.XsDeviceId_isFis2100EvalKit(swigCPtr);
    return ret;
  }

  public bool isFisEvalKit() {
    bool ret = xsensdeviceapiPINVOKE.XsDeviceId_isFisEvalKit(swigCPtr);
    return ret;
  }

  public bool isFmt_X000() {
    bool ret = xsensdeviceapiPINVOKE.XsDeviceId_isFmt_X000(swigCPtr);
    return ret;
  }

  public bool isFmt1000() {
    bool ret = xsensdeviceapiPINVOKE.XsDeviceId_isFmt1000(swigCPtr);
    return ret;
  }

  public bool isFmt1010() {
    bool ret = xsensdeviceapiPINVOKE.XsDeviceId_isFmt1010(swigCPtr);
    return ret;
  }

  public bool isFmt1020() {
    bool ret = xsensdeviceapiPINVOKE.XsDeviceId_isFmt1020(swigCPtr);
    return ret;
  }

  public bool isFmt1030() {
    bool ret = xsensdeviceapiPINVOKE.XsDeviceId_isFmt1030(swigCPtr);
    return ret;
  }

  public bool isImu() {
    bool ret = xsensdeviceapiPINVOKE.XsDeviceId_isImu(swigCPtr);
    return ret;
  }

  public bool isVru() {
    bool ret = xsensdeviceapiPINVOKE.XsDeviceId_isVru(swigCPtr);
    return ret;
  }

  public bool isAhrs() {
    bool ret = xsensdeviceapiPINVOKE.XsDeviceId_isAhrs(swigCPtr);
    return ret;
  }

  public bool isContainerDevice() {
    bool ret = xsensdeviceapiPINVOKE.XsDeviceId_isContainerDevice(swigCPtr);
    return ret;
  }

  public bool containsBroadcast() {
    bool ret = xsensdeviceapiPINVOKE.XsDeviceId_containsBroadcast(swigCPtr);
    return ret;
  }

  public bool isBroadcast() {
    bool ret = xsensdeviceapiPINVOKE.XsDeviceId_isBroadcast(swigCPtr);
    return ret;
  }

  public static XsDeviceId broadcast() {
    XsDeviceId ret = new XsDeviceId(xsensdeviceapiPINVOKE.XsDeviceId_broadcast(), true);
    return ret;
  }

  public bool contains(XsDeviceId other) {
    bool ret = xsensdeviceapiPINVOKE.XsDeviceId_contains(swigCPtr, XsDeviceId.getCPtr(other));
    if (xsensdeviceapiPINVOKE.SWIGPendingException.Pending) throw xsensdeviceapiPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool isType() {
    bool ret = xsensdeviceapiPINVOKE.XsDeviceId_isType(swigCPtr);
    return ret;
  }

  public uint type() {
    uint ret = xsensdeviceapiPINVOKE.XsDeviceId_type(swigCPtr);
    return ret;
  }

  public uint deviceType(bool detailed) {
    uint ret = xsensdeviceapiPINVOKE.XsDeviceId_deviceType__SWIG_0(swigCPtr, detailed);
    return ret;
  }

  public uint deviceType() {
    uint ret = xsensdeviceapiPINVOKE.XsDeviceId_deviceType__SWIG_1(swigCPtr);
    return ret;
  }

  public uint deviceTypeMask(bool detailed) {
    uint ret = xsensdeviceapiPINVOKE.XsDeviceId_deviceTypeMask__SWIG_0(swigCPtr, detailed);
    return ret;
  }

  public uint deviceTypeMask() {
    uint ret = xsensdeviceapiPINVOKE.XsDeviceId_deviceTypeMask__SWIG_1(swigCPtr);
    return ret;
  }

  public XsString typeName() {
    XsString ret = new XsString(xsensdeviceapiPINVOKE.XsDeviceId_typeName(swigCPtr), true);
    return ret;
  }

}

}
