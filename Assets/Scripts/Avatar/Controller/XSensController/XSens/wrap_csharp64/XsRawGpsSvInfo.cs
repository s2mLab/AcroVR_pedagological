//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.5
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace XDA {

public class XsRawGpsSvInfo : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal XsRawGpsSvInfo(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(XsRawGpsSvInfo obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~XsRawGpsSvInfo() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          xsensdeviceapiPINVOKE.delete_XsRawGpsSvInfo(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
    }
  }

  public uint m_itow {
    set {
      xsensdeviceapiPINVOKE.XsRawGpsSvInfo_m_itow_set(swigCPtr, value);
    } 
    get {
      uint ret = xsensdeviceapiPINVOKE.XsRawGpsSvInfo_m_itow_get(swigCPtr);
      return ret;
    } 
  }

  public byte m_nch {
    set {
      xsensdeviceapiPINVOKE.XsRawGpsSvInfo_m_nch_set(swigCPtr, value);
    } 
    get {
      byte ret = xsensdeviceapiPINVOKE.XsRawGpsSvInfo_m_nch_get(swigCPtr);
      return ret;
    } 
  }

  public byte m_res1 {
    set {
      xsensdeviceapiPINVOKE.XsRawGpsSvInfo_m_res1_set(swigCPtr, value);
    } 
    get {
      byte ret = xsensdeviceapiPINVOKE.XsRawGpsSvInfo_m_res1_get(swigCPtr);
      return ret;
    } 
  }

  public ushort m_res2 {
    set {
      xsensdeviceapiPINVOKE.XsRawGpsSvInfo_m_res2_set(swigCPtr, value);
    } 
    get {
      ushort ret = xsensdeviceapiPINVOKE.XsRawGpsSvInfo_m_res2_get(swigCPtr);
      return ret;
    } 
  }

  public XsSvInfo m_svInfos {
    set {
      xsensdeviceapiPINVOKE.XsRawGpsSvInfo_m_svInfos_set(swigCPtr, XsSvInfo.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = xsensdeviceapiPINVOKE.XsRawGpsSvInfo_m_svInfos_get(swigCPtr);
      XsSvInfo ret = (cPtr == global::System.IntPtr.Zero) ? null : new XsSvInfo(cPtr, false);
      return ret;
    } 
  }

  public XsRawGpsSvInfo() : this(xsensdeviceapiPINVOKE.new_XsRawGpsSvInfo(), true) {
  }

}

}
