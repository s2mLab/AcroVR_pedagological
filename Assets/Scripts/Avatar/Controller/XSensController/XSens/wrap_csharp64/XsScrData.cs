//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.5
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace XDA {

public class XsScrData : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal XsScrData(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(XsScrData obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~XsScrData() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          xsensdeviceapiPINVOKE.delete_XsScrData(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
    }
  }

  public XsUShortVector m_acc {
    set {
      xsensdeviceapiPINVOKE.XsScrData_m_acc_set(swigCPtr, XsUShortVector.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = xsensdeviceapiPINVOKE.XsScrData_m_acc_get(swigCPtr);
      XsUShortVector ret = (cPtr == global::System.IntPtr.Zero) ? null : new XsUShortVector(cPtr, false);
      return ret;
    } 
  }

  public XsUShortVector m_gyr {
    set {
      xsensdeviceapiPINVOKE.XsScrData_m_gyr_set(swigCPtr, XsUShortVector.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = xsensdeviceapiPINVOKE.XsScrData_m_gyr_get(swigCPtr);
      XsUShortVector ret = (cPtr == global::System.IntPtr.Zero) ? null : new XsUShortVector(cPtr, false);
      return ret;
    } 
  }

  public XsUShortVector m_mag {
    set {
      xsensdeviceapiPINVOKE.XsScrData_m_mag_set(swigCPtr, XsUShortVector.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = xsensdeviceapiPINVOKE.XsScrData_m_mag_get(swigCPtr);
      XsUShortVector ret = (cPtr == global::System.IntPtr.Zero) ? null : new XsUShortVector(cPtr, false);
      return ret;
    } 
  }

  public ushort m_temp {
    set {
      xsensdeviceapiPINVOKE.XsScrData_m_temp_set(swigCPtr, value);
    } 
    get {
      ushort ret = xsensdeviceapiPINVOKE.XsScrData_m_temp_get(swigCPtr);
      return ret;
    } 
  }

  public XsScrData() : this(xsensdeviceapiPINVOKE.new_XsScrData(), true) {
  }

}

}
